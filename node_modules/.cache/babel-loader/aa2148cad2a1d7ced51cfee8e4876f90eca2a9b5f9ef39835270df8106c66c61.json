{"ast":null,"code":"var _jsxFileName = \"D:\\\\react_Authentication\\\\01-starting-project\\\\src\\\\store\\\\auth-context.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext({\n  token: \"\",\n  isLoggedIn: false,\n  login: token => {},\n  logout: () => {}\n});\n\n// define the function and all to handle the data\n\nexport const AuthContextProvider = props => {\n  _s();\n  const [token, setToken] = useState(null);\n  const userIsLoggedIn = !!token; // it is actually a javascriupt syntax to check true or false\n\n  const loginHandler = token => {\n    setToken(token);\n    // using local storage\n    localStorage.setItem('token', token);\n  };\n  const logoutHandler = () => {\n    setToken(null);\n    localStorage.removeItem('token');\n  };\n\n  // returning the value \n  const contextValue = {\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler\n  };\n  return (\n    /*#__PURE__*/\n    // passing the data using value - contextvalue is object name \n    // and value containes the infomation about data\n    _jsxDEV(AuthContext.Provider, {\n      value: contextValue,\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(AuthContextProvider, \"e+LEOB8XbRIRiSUQHKM4ToWFki4=\");\n_c = AuthContextProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["React","useState","AuthContext","createContext","token","isLoggedIn","login","logout","AuthContextProvider","props","setToken","userIsLoggedIn","loginHandler","localStorage","setItem","logoutHandler","removeItem","contextValue","children"],"sources":["D:/react_Authentication/01-starting-project/src/store/auth-context.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\n\r\n\r\nconst AuthContext = React.createContext({\r\n  token: \"\",\r\n  isLoggedIn: false,\r\n  login: (token) => {},\r\n  logout: () => {},\r\n});\r\n\r\n// define the function and all to handle the data\r\n\r\nexport const AuthContextProvider = (props) => {\r\n  const [token, setToken] = useState(null);\r\n  const userIsLoggedIn = !!token; // it is actually a javascriupt syntax to check true or false\r\n\r\n  const loginHandler = (token) => {    \r\n    setToken(token);\r\n    // using local storage\r\n    localStorage.setItem('token', token);\r\n  };\r\n\r\n  const logoutHandler = () => {\r\n    setToken(null);\r\n\r\n    localStorage.removeItem('token');\r\n  };\r\n\r\n\r\n  // returning the value \r\n  const contextValue = {\r\n    token: token,\r\n    isLoggedIn: userIsLoggedIn,\r\n    login: loginHandler,\r\n    logout: logoutHandler,\r\n  };\r\n\r\n  return (\r\n    // passing the data using value - contextvalue is object name \r\n    // and value containes the infomation about data\r\n\r\n    <AuthContext.Provider value={contextValue}>\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAIxC,MAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAa,CAAC;EACtCC,KAAK,EAAE,EAAE;EACTC,UAAU,EAAE,KAAK;EACjBC,KAAK,EAAGF,KAAK,IAAK,CAAC,CAAC;EACpBG,MAAM,EAAE,MAAM,CAAC;AACjB,CAAC,CAAC;;AAEF;;AAEA,OAAO,MAAMC,mBAAmB,GAAIC,KAAK,IAAK;EAAA;EAC5C,MAAM,CAACL,KAAK,EAAEM,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAMU,cAAc,GAAG,CAAC,CAACP,KAAK,CAAC,CAAC;;EAEhC,MAAMQ,YAAY,GAAIR,KAAK,IAAK;IAC9BM,QAAQ,CAACN,KAAK,CAAC;IACf;IACAS,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEV,KAAK,CAAC;EACtC,CAAC;EAED,MAAMW,aAAa,GAAG,MAAM;IAC1BL,QAAQ,CAAC,IAAI,CAAC;IAEdG,YAAY,CAACG,UAAU,CAAC,OAAO,CAAC;EAClC,CAAC;;EAGD;EACA,MAAMC,YAAY,GAAG;IACnBb,KAAK,EAAEA,KAAK;IACZC,UAAU,EAAEM,cAAc;IAC1BL,KAAK,EAAEM,YAAY;IACnBL,MAAM,EAAEQ;EACV,CAAC;EAED;IAAA;IACE;IACA;IAEA,QAAC,WAAW,CAAC,QAAQ;MAAC,KAAK,EAAEE,YAAa;MAAA,UACvCR,KAAK,CAACS;IAAQ;MAAA;MAAA;MAAA;IAAA;EACM;AAE3B,CAAC;AAAC,GAjCWV,mBAAmB;AAAA,KAAnBA,mBAAmB;AAmChC,eAAeN,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}