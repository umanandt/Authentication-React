{"ast":null,"code":"var _jsxFileName = \"D:\\\\react_Authentication\\\\01-starting-project\\\\src\\\\components\\\\Auth\\\\AuthForm.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef } from \"react\";\nimport classes from \"./AuthForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthForm = () => {\n  _s();\n  const [isLogin, setIsLogin] = useState(true);\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const switchAuthModeHandler = () => {\n    setIsLogin(prevState => !prevState);\n  };\n  const submitHandler = event => {\n    event.preventDefault();\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n    if (isLogin) {} else {\n      fetch(\"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCh99fb68lWE88xr9v1ButOQH6kNesi3zI\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          email: enteredEmail,\n          password: enteredPassword,\n          returnSecureToken: true\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(res => {\n        if (res.ok) {\n          //...\n        } else {\n          return res.json().then(data => {\n            // show an error modal\n            // show some error message to users\n            let errorMessage = \"Authentication failed\";\n            if (data && data.error && data.error.message) {\n              errorMessage = data.error.message;\n            }\n            alert(errorMessage);\n          });\n        }\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? \"Login\" : \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          required: true,\n          ref: emailInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          required: true,\n          ref: passwordInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: isLogin ? \"Login\" : \"Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.toggle,\n          onClick: switchAuthModeHandler,\n          children: isLogin ? \"Create new account\" : \"Login with existing account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthForm, \"5EK5xEuJ1cMzzb2GzgNOWjCp1Ow=\");\n_c = AuthForm;\nexport default AuthForm;\nvar _c;\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"names":["useState","useRef","classes","AuthForm","isLogin","setIsLogin","emailInputRef","passwordInputRef","switchAuthModeHandler","prevState","submitHandler","event","preventDefault","enteredEmail","current","value","enteredPassword","fetch","method","body","JSON","stringify","email","password","returnSecureToken","headers","then","res","ok","json","data","errorMessage","error","message","alert","auth","control","actions","toggle"],"sources":["D:/react_Authentication/01-starting-project/src/components/Auth/AuthForm.js"],"sourcesContent":["import { useState, useRef } from \"react\";\n\nimport classes from \"./AuthForm.module.css\";\n\nconst AuthForm = () => {\n  const [isLogin, setIsLogin] = useState(true);\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n\n    if (isLogin) {\n    } else {\n      fetch(\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCh99fb68lWE88xr9v1ButOQH6kNesi3zI\",\n        {\n          method: \"POST\",\n          body: JSON.stringify({\n            email: enteredEmail,\n            password: enteredPassword,\n            returnSecureToken: true,\n          }),\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      ).then((res) => {\n        if (res.ok) {\n          //...\n        } else {\n          return res.json().then((data) => {\n            // show an error modal\n            // show some error message to users\n            let errorMessage = \"Authentication failed\";\n            if (data && data.error && data.error.message) {\n              errorMessage = data.error.message;\n            }\n            alert(errorMessage);\n          });\n        }\n      });\n    }\n  };\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? \"Login\" : \"Sign Up\"}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor=\"email\">Your Email</label>\n          <input type=\"email\" id=\"email\" required ref={emailInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"password\">Your Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            required\n            ref={passwordInputRef}\n          />\n        </div>\n        <div className={classes.actions}>\n          <button>{isLogin ? \"Login\" : \"Create Account\"}</button>\n          <button\n            type=\"button\"\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? \"Create new account\" : \"Login with existing account\"}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}